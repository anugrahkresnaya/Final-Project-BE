{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar E-Flight Ticket Platform  API",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://final-project-be-production-6de7.up.railway.app"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Related About Authentication"
    },
    {
      "name": "users",
      "description": "Related About Users"
    },
    {
      "name": "airplanes",
      "description": "Related About airplanes"
    },
    {
      "name": "airports",
      "description": "Related About Airport"
    },
    {
      "name": "tickets",
      "description": "Related About Tickets"
    },
    {
      "name": "wishlists",
      "description": "Related About Wishlists"
    },
    {
      "name": "orders",
      "description": "Related About Orders, histories, and notifications"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "To register new user to the user table",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "this is user's name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Reina"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "this is user's email",
            "required": true,
            "schema": {
              "type": "string",
              "example": "reina@mail.com"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "this is user's password",
            "required": true,
            "schema": {
              "type": "string",
              "example": "reina123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if user successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Success Register New User"
                    },
                    "user": {
                      "type": "string",
                      "example": "rei@mail.com"
                    },
                    "access token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6Ik1pZGhhdCIsImVtYWlsIjoibWlkaGF0QGJpbmFyLmNvLmlkIiwicm9sZSI6eyJpZCI6MSwibmFtZSI6IkNVU1RPTUVSIn0sImlhdCI6MTY3MDU5NTgwOH0.9QaMJm74p_g8s0w3CFRXeH3TechS6-l1ROXDDwtL7Ys"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "if email is already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "user with email : rei@mail.com already taken"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if password length is below requirement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "minimum password length must be 6 charater or more"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "To Login with exist user",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "this is user's email",
            "required": true,
            "schema": {
              "type": "string",
              "example": "reina@mail.com"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "this is user's password",
            "required": true,
            "schema": {
              "type": "string",
              "example": "reina123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if user successfully Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Success Login"
                    },
                    "user": {
                      "type": "string",
                      "example": "rei@mail.com"
                    },
                    "role": {
                      "type": "string",
                      "example": "CUSTOMER"
                    },
                    "access token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6Ik1pZGhhdCIsImVtYWlsIjoibWlkaGF0QGJpbmFyLmNvLmlkIiwicm9sZSI6eyJpZCI6MSwibmFtZSI6IkNVU1RPTUVSIn0sImlhdCI6MTY3MDU5NTgwOH0.9QaMJm74p_g8s0w3CFRXeH3TechS6-l1ROXDDwtL7Ys"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "if password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "The password you entered is incorrect"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if email doesnt exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "user with email : ri@mail.com is not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user/{id}": {
      "get": {
        "tags": [
          "auth"
        ],
        "description": "To check current user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is user id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "token",
            "description": "this is user token for authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwibmFtZSI6InJlaSIsImVtYWlsIjoicmVpQG1haWwuY29tIiwicm9sZUlkIjozLCJpYXQiOjE2NjY0NTA4MDd9.Fn_Q3So3y0NadOzOG4YcUsu4CY37PPyt8weLnS9x7_Y"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if user successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "noKTP": {
                          "type": "string",
                          "example": 182745
                        },
                        "username": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "name": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "contact": {
                          "type": "string",
                          "example": 812472134
                        },
                        "gender": {
                          "type": "string",
                          "example": "Pria"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "example": "04-04-2002"
                        },
                        "address": {
                          "type": "string",
                          "example": "gotham"
                        },
                        "photoProfile": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dbuxups0z/image/upload/v1665242741/test/z45vzrf84pjditp6jh4a.jpg"
                        },
                        "email": {
                          "type": "string",
                          "example": "jl. anggrek no.00"
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "example": "$2b$10$bYPE07NwXnMGE8cqkunNKe/KBcme4HcEIRYoLDfd5wz2GkoX0RvcW"
                        },
                        "roleId": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "if user token is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "To retrieve the list of existing users",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get user list successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "roleId": {
                          "type": "integer",
                          "format": "int64",
                          "example": 3
                        },
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "noKTP": {
                          "type": "string",
                          "example": 182745
                        },
                        "username": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "name": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "gender": {
                          "type": "string",
                          "example": "Pria"
                        },
                        "contact": {
                          "type": "string",
                          "example": 812472134
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "example": "04-04-2002"
                        },
                        "photoProfile": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dbuxups0z/image/upload/v1665242741/test/z45vzrf84pjditp6jh4a.jpg"
                        },
                        "email": {
                          "type": "string",
                          "example": "jl. anggrek no.00"
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "example": "$2b$10$bYPE07NwXnMGE8cqkunNKe/KBcme4HcEIRYoLDfd5wz2GkoX0RvcW"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "To retrieve the user data of existing users",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is user's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get user list successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "roleId": {
                          "type": "integer",
                          "format": "int64",
                          "example": 3
                        },
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "noKTP": {
                          "type": "string",
                          "example": 182745
                        },
                        "username": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "name": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "gender": {
                          "type": "string",
                          "example": "Pria"
                        },
                        "contact": {
                          "type": "string",
                          "example": 812472134
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "example": "04-04-2002"
                        },
                        "photoProfile": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dbuxups0z/image/upload/v1665242741/test/z45vzrf84pjditp6jh4a.jpg"
                        },
                        "email": {
                          "type": "string",
                          "example": "jl. anggrek no.00"
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "example": "$2b$10$bYPE07NwXnMGE8cqkunNKe/KBcme4HcEIRYoLDfd5wz2GkoX0RvcW"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/update/{id}": {
      "put": {
        "tags": [
          "users"
        ],
        "description": "To update the user on the users table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is user id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "noKtp",
            "description": "this is user no KTP",
            "required": true,
            "schema": {
              "type": "string",
              "example": 321194786128
            }
          },
          {
            "in": "query",
            "name": "username",
            "description": "this is user's username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "GreenHat"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "this is user's name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Reina"
            }
          },
          {
            "in": "query",
            "name": "contact",
            "description": "this is user contact number",
            "required": true,
            "schema": {
              "type": "string",
              "example": 8018294123
            }
          },
          {
            "in": "query",
            "name": "gender",
            "description": "this is user's gender",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pria"
            }
          },
          {
            "in": "query",
            "name": "dateOfBirth",
            "description": "this is user date of birth",
            "required": true,
            "schema": {
              "type": "string",
              "example": "July 20, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "address,",
            "description": "this is user's address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Gotham"
            }
          },
          {
            "in": "query",
            "name": "photoProfile",
            "description": "this is user's photo profile",
            "required": true,
            "schema": {
              "type": "string",
              "example": "https://res.cloudinary.com/dbuxups0z/image/upload/v1665242741/test/z45vzrf84pjditp6jh4a.jpg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "user updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "noKTP": {
                          "type": "string",
                          "example": 182745
                        },
                        "username": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "name": {
                          "type": "string",
                          "example": "Rei"
                        },
                        "contact": {
                          "type": "string",
                          "example": 812472134
                        },
                        "gender": {
                          "type": "string",
                          "example": "Pria"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "example": "04-04-2002"
                        },
                        "photoProfile": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dbuxups0z/image/upload/v1665242741/test/z45vzrf84pjditp6jh4a.jpg"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to update  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "description": "To retrieve the list of existing airplanes",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "get list airplanes successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "code": {
                          "type": "string",
                          "example": "GIA"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/{id}": {
      "get": {
        "tags": [
          "airplanes"
        ],
        "description": "To retrieve the list of existing airplanes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airplane's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "get airplane data successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "code": {
                          "type": "string",
                          "example": "GIA"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/add": {
      "post": {
        "tags": [
          "airplanes"
        ],
        "description": "To add new airplanes to the airplanes table",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "this is airplanes name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Garuda Indonesia"
            }
          },
          {
            "in": "query",
            "name": "code",
            "description": "this is airplane's code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "GIA"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "this is airplane's country",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Indonesia"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "airplane added successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "code": {
                          "type": "string",
                          "example": "GIA"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to add new data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/update/{id}": {
      "put": {
        "tags": [
          "airplanes"
        ],
        "description": "To update the airplanes on the airplanes table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airplane's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "this is airplanes name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Garuda Indonesia"
            }
          },
          {
            "in": "query",
            "name": "code",
            "description": "this is airplane's code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "GIA"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "this is airplane's country",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Indonesia"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "airplane updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "code": {
                          "type": "string",
                          "example": "GIA"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to update  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplanes/delete/{id}": {
      "delete": {
        "tags": [
          "airplanes"
        ],
        "description": "To delete the airplanes on the airplanes table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airplane's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "airplane deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/airports/": {
      "get": {
        "tags": [
          "airports"
        ],
        "description": "To retrieve the list of existing airports",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "get airports list successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Soekarno Hatta Airport"
                        },
                        "code": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "IDN"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/airports/{id}": {
      "get": {
        "tags": [
          "airports"
        ],
        "description": "To retrieve the list of existing airports",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airport's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "get airport data successfull"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Soekarno Hatta Airport"
                        },
                        "code": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "IDN"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/airports/add": {
      "post": {
        "tags": [
          "airports"
        ],
        "description": "To add new airport to the airports table",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "this is airport's name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "seokarno hatta airport"
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "this is airport's city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "jakarta"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "this is airport's country",
            "required": true,
            "schema": {
              "type": "string",
              "example": "indonesia"
            }
          },
          {
            "in": "query",
            "name": "country_code",
            "description": "this is airport's country code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "idn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "airports added successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Soekarno Hatta Airport"
                        },
                        "code": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "IDN"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to add new data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/airports/update/{id}": {
      "put": {
        "tags": [
          "airports"
        ],
        "description": "To update the airport on the airports table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airport's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "this is airport's name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "seokarno hatta airport"
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "this is airport's city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "jakarta"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "this is airport's country",
            "required": true,
            "schema": {
              "type": "string",
              "example": "indonesia"
            }
          },
          {
            "in": "query",
            "name": "country_code",
            "description": "this is airport's country code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "idn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "massage": {
                      "example": "airports updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Soekarno Hatta Airport"
                        },
                        "code": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "country": {
                          "type": "string",
                          "example": "Indonesia"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "IDN"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to update  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/airport/delete/{id}": {
      "delete": {
        "tags": [
          "airports"
        ],
        "description": "To delete the airport on the airports table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is airport's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "airport deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets": {
      "get": {
        "tags": [
          "tickets"
        ],
        "description": "To retrieve the list of existing tickets",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get ticket list successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "airplane_name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "departure_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "arrival_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "return_time": {
                          "type": "string",
                          "example": "2022-010-22T08:36:55.584Z"
                        },
                        "arrival2_time": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 860000
                        },
                        "category": {
                          "type": "string",
                          "example": "one_way"
                        },
                        "origin": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "destination": {
                          "type": "string",
                          "example": "Medan"
                        },
                        "createdBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "updatedBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "deletedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/{id}": {
      "get": {
        "tags": [
          "tickets"
        ],
        "description": "To retrieve the list of tickets by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is ticket's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get ticket successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "airplane_name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "departure_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "arrival_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "return_time": {
                          "type": "string",
                          "example": "2022-010-22T08:36:55.584Z"
                        },
                        "arrival2_time": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 860000
                        },
                        "category": {
                          "type": "string",
                          "example": "one_way"
                        },
                        "origin": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "destination": {
                          "type": "string",
                          "example": "Medan"
                        },
                        "createdBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "updatedBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "deletedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "if failed to retrieve data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "FAIL"
                    },
                    "message": {
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/add": {
      "post": {
        "tags": [
          "tickets"
        ],
        "description": "To add new ticket list to the tickets table",
        "parameters": [
          {
            "in": "query",
            "name": "departure_time",
            "description": "this is ticket's departure time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "July 20, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "arrival_time",
            "description": "this is ticket's arrival time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "July 21, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "return_time",
            "description": "this is ticket's return time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "August 4, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "arrival2_time",
            "description": "this is ticket's 2nd arrival time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "August 5, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "price",
            "description": "this is ticket's price",
            "required": true,
            "schema": {
              "type": "string",
              "example": 860000
            }
          },
          {
            "in": "query",
            "name": "category",
            "description": "this is ticket's category",
            "required": true,
            "schema": {
              "type": "string",
              "example": "one way"
            }
          },
          {
            "in": "query",
            "name": "origin,",
            "description": "this is ticket's departure city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Gotham"
            }
          },
          {
            "in": "query",
            "name": "destination",
            "description": "this is ticket's desitnation city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "star city"
            }
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "this is who create the ticket",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "req.user.id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Ticket data added successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "departure_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "arrival_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "return_time": {
                          "type": "string",
                          "example": "2022-010-22T08:36:55.584Z"
                        },
                        "arrival2_time": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 860000
                        },
                        "category": {
                          "type": "string",
                          "example": "one_way"
                        },
                        "airplane_name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "origin": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "destination": {
                          "type": "string",
                          "example": "Medan"
                        },
                        "createdBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "updatedBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "deletedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to add new data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/{id}/order": {
      "post": {
        "tags": [
          "tickets"
        ],
        "description": "To add the ordered ticket on the order table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is order's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "userId",
            "description": "this is user's id that make an order",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 13
            }
          },
          {
            "in": "query",
            "name": "ticketId",
            "description": "this is ordered ticket's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 4
            }
          },
          {
            "in": "query",
            "name": "order_date",
            "description": "this is ticket's ordered time/date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "August 4, 23 10:20:18 GMT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "order data added successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 4
                        },
                        "order_date": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to create  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/update/{id}": {
      "put": {
        "tags": [
          "tickets"
        ],
        "description": "To update the ticket on the tickets table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is ticket's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "departure_time",
            "description": "this is ticket's departure time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "July 20, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "arrival_time",
            "description": "this is ticket's arrival time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "July 21, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "return_time",
            "description": "this is ticket's return time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "August 4, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "arrival2_time",
            "description": "this is ticket's 2nd arrival time",
            "required": true,
            "schema": {
              "type": "string",
              "example": "August 5, 23 10:20:18 GMT"
            }
          },
          {
            "in": "query",
            "name": "price",
            "description": "this is ticket's price",
            "required": true,
            "schema": {
              "type": "string",
              "example": 860000
            }
          },
          {
            "in": "query",
            "name": "category",
            "description": "this is ticket's category",
            "required": true,
            "schema": {
              "type": "string",
              "example": "one way"
            }
          },
          {
            "in": "query",
            "name": "origin,",
            "description": "this is ticket's departure city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Gotham"
            }
          },
          {
            "in": "query",
            "name": "destination",
            "description": "this is ticket's desitnation city",
            "required": true,
            "schema": {
              "type": "string",
              "example": "star city"
            }
          },
          {
            "in": "query",
            "name": "updatedBy",
            "description": "this is who edited the ticket",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "req.user.id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Ticket data updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "airplane_name": {
                          "type": "string",
                          "example": "Garuda Indonesia"
                        },
                        "departure_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "arrival_time": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "return_time": {
                          "type": "string",
                          "example": "2022-010-22T08:36:55.584Z"
                        },
                        "arrival2_time": {
                          "type": "string",
                          "example": "2022-10-22T08:36:55.584Z"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 860000
                        },
                        "category": {
                          "type": "string",
                          "example": "one_way"
                        },
                        "origin": {
                          "type": "string",
                          "example": "Jakarta"
                        },
                        "destination": {
                          "type": "string",
                          "example": "Medan"
                        },
                        "createdBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "updatedBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "deletedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to update  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/delete/{id}": {
      "delete": {
        "tags": [
          "tickets"
        ],
        "description": "To delete the flight list on the flightList table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is ticket's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "ticket deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notfications": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "To retrieve the list of existing notifications",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get notifications list successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "orderId": {
                          "type": "integer",
                          "example": 2
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to create  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "To retrieve the list of existing orders",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "get order list successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 4
                        },
                        "order_date": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to get  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/histories": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "To retrieve the list of existing history",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Successfully get history list"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 4
                        },
                        "order_date": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to get  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/history/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "To retrieve the list of existing history by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is history's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "History data fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 4
                        },
                        "order_date": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to get  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wishlists": {
      "get": {
        "tags": [
          "wishlists"
        ],
        "description": "To retrieve the list of existing wishlist",
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Wishlist list data fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 4
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "destroyedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to get  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wishlists/{id}": {
      "get": {
        "tags": [
          "wishlists"
        ],
        "description": "To retrieve the list of existing wishlist by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is wishlist's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Wishlist list data fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 3
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "destroyedAt": {
                          "type": "string",
                          "example": null
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to get  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wihstlists/{ticketId}": {
      "post": {
        "tags": [
          "wishlists"
        ],
        "description": "To add the wishlist on the wishlists table",
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "this is ticket's id that will be put into wishlist",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "in": "query",
            "name": "userId",
            "description": "this is user's id that make a wishlist",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Wishlist successfully added"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": 3
                        },
                        "userId": {
                          "type": "integer",
                          "example": 13
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-09-22T08:36:55.584Z"
                        },
                        "destroyedAt": {
                          "type": "string",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to create  data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wishlists/delete/{id}": {
      "delete": {
        "tags": [
          "wishlists"
        ],
        "description": "To delete the wishlist on the wishlist table",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this is wishlist's id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "massage": {
                      "example": "Wishlist successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "if doesnt have authority to delete data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Unauthorized Access"
                    },
                    "message": {
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}